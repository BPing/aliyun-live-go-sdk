# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.8

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get golang.org/x/tools/cmd/cover
      - run: go get github.com/mattn/goveralls
      - run: go build  /go/src/github.com/BPing/aliyun-live-go-sdk/client
      - run: go build  github.com/BPing/aliyun-live-go-sdk/device
      - run: go build  github.com/BPing/aliyun-live-go-sdk/device/cdn
      - run: go build  github.com/BPing/aliyun-live-go-sdk/device/live
      - run: go build  github.com/BPing/aliyun-live-go-sdk/util
      - run: go test -v github.com/BPing/aliyun-live-go-sdk/device
      - run: go test -v github.com/BPing/aliyun-live-go-sdk/client -covermode=count -coverprofile=clientcoverage.out
      - run: $HOME/gopath/bin/goveralls -coverprofile=clientcoverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
      - run: go test -v github.com/BPing/aliyun-live-go-sdk/util -covermode=count -coverprofile=utilcoverage.out
      - run: $HOME/gopath/bin/goveralls -coverprofile=utilcoverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN
